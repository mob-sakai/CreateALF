# name: test_input

# on:
#   issues:
#     types: [opened]

# jobs:
#   build:

#     runs-on: ubuntu-latest
#     env:
#       ISSUE_TITLE: ${{ github.event.issue.title }}
    
#     steps:
#       - name: Dump GitHub context
#         env:
#           GITHUB_CONTEXT: ${{ toJson(github) }}
#         run: echo "$GITHUB_CONTEXT"

#       - name: test input
#         env:
#           ISSUE_TITLE: ${{ github.event.issue.title }}
#         run: echo ${{ github.event.issue.title }}
      
#       - name: Create Asset
#         run: echo ${{ github.event.issue.title }} > artifact

#       - uses: actions/upload-artifact@master
#         with:
#           name: artifact
#           path: artifact

#       - name: Create Release
#         id: create_release
#         uses: actions/create-release@v1.0.0
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: ${{ github.event.issue.title }}
#           release_name: ${{ github.event.issue.title }}
#           draft: false
#           prerelease: false

#       - name: Upload Release Asset
#         uses: actions/upload-release-asset@v1.0.1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
#           asset_path: artifact
#           asset_name: ${{ github.event.issue.title }}.alf
#           asset_content_type: application/text
